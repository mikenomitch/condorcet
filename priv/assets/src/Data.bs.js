// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Json_decode = require("@glennsl/bs-json/src/Json_decode.bs.js");
var Json_encode = require("@glennsl/bs-json/src/Json_encode.bs.js");

function dPoll(json) {
  return {
          id: Json_decode.optional((function (param) {
                  return Json_decode.field("id", Json_decode.$$int, param);
                }), json),
          question: Json_decode.field("question", Json_decode.string, json),
          choices: Json_decode.field("choices", (function (param) {
                  return Json_decode.list(Json_decode.string, param);
                }), json)
        };
}

function dResponse(json) {
  return {
          id: Json_decode.optional((function (param) {
                  return Json_decode.field("id", Json_decode.$$int, param);
                }), json),
          name: Json_decode.field("name", Json_decode.string, json),
          choices: Json_decode.field("choices", (function (param) {
                  return Json_decode.list(Json_decode.string, param);
                }), json)
        };
}

function dResult(json) {
  return {
          winner: Json_decode.field("winner", Json_decode.string, json),
          responseCount: Json_decode.field("responseCount", Json_decode.$$int, json),
          poll: Json_decode.field("poll", dPoll, json)
        };
}

var Decode = {
  dPoll: dPoll,
  dResponse: dResponse,
  dResult: dResult
};

function encodePoll(poll) {
  return Json_encode.object_(/* :: */[
              /* tuple */[
                "question",
                poll.question
              ],
              /* :: */[
                /* tuple */[
                  "choices",
                  Json_encode.list((function (prim) {
                          return prim;
                        }), poll.choices)
                ],
                /* [] */0
              ]
            ]);
}

function encodeResponse(response) {
  return Json_encode.object_(/* :: */[
              /* tuple */[
                "name",
                response.name
              ],
              /* :: */[
                /* tuple */[
                  "choices",
                  Json_encode.list((function (prim) {
                          return prim;
                        }), response.choices)
                ],
                /* [] */0
              ]
            ]);
}

function encodeResult(result) {
  return Json_encode.object_(/* :: */[
              /* tuple */[
                "poll",
                encodePoll(result.poll)
              ],
              /* :: */[
                /* tuple */[
                  "winner",
                  result.winner
                ],
                /* :: */[
                  /* tuple */[
                    "responseCount",
                    result.responseCount
                  ],
                  /* [] */0
                ]
              ]
            ]);
}

var examplePoll = {
  id: 1,
  question: "what is best in life?",
  choices: /* :: */[
    "to crush your enemies",
    /* :: */[
      "to see your enemies driven before you",
      /* :: */[
        "to hear the lamentations of their women",
        /* [] */0
      ]
    ]
  ]
};

var winner = "to see your enemies driven before you";

var exampleResult = {
  winner: winner,
  responseCount: 3,
  poll: examplePoll
};

var _rest = /* :: */[
  "to hear the lamentations of their women",
  /* [] */0
];

exports.Decode = Decode;
exports.encodePoll = encodePoll;
exports.encodeResponse = encodeResponse;
exports.encodeResult = encodeResult;
exports.examplePoll = examplePoll;
exports.winner = winner;
exports._rest = _rest;
exports.exampleResult = exampleResult;
/* No side effect */

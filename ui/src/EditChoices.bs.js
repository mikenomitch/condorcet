// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var R$Condorcet = require("./lib/R.bs.js");
var Api$Condorcet = require("./lib/Api.bs.js");
var ReasonReactRouter = require("reason-react/src/ReasonReactRouter.js");

function EditChoices(Props) {
  var notify = Props.notify;
  var result = Props.result;
  var match = result.poll.id;
  var match$1 = result.poll.manageToken;
  var match$2 = result.poll.id;
  if (match !== undefined && match$1 !== undefined && match$2 !== undefined) {
    var manageToken = match$1;
    return React.createElement("div", {
                className: "page"
              }, React.createElement("h3", {
                    className: "centered"
                  }, R$Condorcet.s("Edit Choices")), React.createElement("h4", {
                    className: "centered"
                  }, R$Condorcet.s("Select a choice to remove:")), React.createElement("div", {
                    className: "remove-choice-list"
                  }, $$Array.of_list(List.map((function (param) {
                              var manageToken$1 = manageToken;
                              var choice = param;
                              return React.createElement("div", {
                                          key: choice,
                                          className: "remove-choice"
                                        }, React.createElement("div", undefined, React.createElement("button", {
                                                  className: "button button-sm",
                                                  onClick: (function (param) {
                                                      var manageToken$2 = manageToken$1;
                                                      var choice$1 = choice;
                                                      Api$Condorcet.removeChoice(manageToken$2, choice$1).then((function (resultVariant) {
                                                              if (resultVariant.tag) {
                                                                ReasonReactRouter.push("/manage-poll/" + manageToken$2);
                                                                Curry._2(notify, "info", "Results recalculated without choice");
                                                                return Promise.resolve(/* () */0);
                                                              } else {
                                                                Curry._2(notify, "error", "There was an issue removing the choice");
                                                                return Promise.resolve(/* () */0);
                                                              }
                                                            }));
                                                      return /* () */0;
                                                    })
                                                }, React.createElement("i", {
                                                      className: "far fa-trash-alt"
                                                    }))), React.createElement("div", undefined, R$Condorcet.s(choice)));
                            }), result.poll.choices))));
  } else {
    return null;
  }
}

var make = EditChoices;

exports.make = make;
/* react Not a pure module */
